#!/bin/bash

#set -x
set -eo pipefail

APP_HOME=/opt/hub
APP_JAR=$(ls ${APP_HOME}/lib/hub-*)
CLASSPATH=${APP_JAR}:${APP_HOME}/lib/*
CONFIG_DIR=/etc/hub
# LOG_DIR also exists in logback.xml
LOG_DIR=/mnt/log
DEBUG_PORT=3333
HOST_IP=${HUB_RMI_HOST_IP:=localhost}
JMXREMOTE_PORT=8888

# extract the port from hub.properties
for word in $(<${CONFIG_DIR}/hub.properties); do
    if [[ ${word} == http.bind_port* ]]; then
        APP_PORT=$(echo ${word} | cut -d '=' -f 2)
    fi
done

# Account for encrypted hub flavor
if [[ $APP_PORT == "8443"  || $APP_PORT == "443" ]]; then
  CURL="curl -kis -X POST https://"
else
  CURL="curl -is -X POST http://"
fi

JAVA_OPTS="
 -d64
 -server
 -Xmx$MAX_HEAP
 -Xms$MIN_HEAP
 -XX:NewSize=$NEW_SIZE
 -XX:+HeapDumpOnOutOfMemoryError
 -XX:HeapDumpPath=/mnt/log
 -XX:+ExitOnOutOfMemoryError
 -agentlib:jdwp=transport=dt_socket,address=localhost:$DEBUG_PORT,server=y,suspend=n
 -Djboss.platform.mbeanserver
 -Dcom.sun.management.jmxremote.local.only=true
 -Dcom.sun.management.jmxremote.host=localhost
 -Djava.rmi.server.hostname=localhost
 -Dcom.sun.management.jmxremote.port=$JMXREMOTE_PORT
 -Dcom.sun.management.jmxremote.rmi.port=$JMXREMOTE_PORT
 -Dcom.sun.management.jmxremote.ssl=false
 -Dcom.sun.management.jmxremote.authenticate=true
 -Dcom.sun.management.jmxremote.password.file=/etc/hub/jmxremote.password
 -XX:+PrintTenuringDistribution
 -Djava.awt.headless=true
 -Dsun.net.inetaddr.ttl=0
 -XX:+UseG1GC
 -XX:MaxGCPauseMillis=100
 -Dsun.rmi.dgc.client.gcInterval=300000
 -Dsun.rmi.dgc.server.gcInterval=300000
 -XX:+PrintGCDetails
 -XX:+PrintGCDateStamps
 -XX:+UseGCLogFileRotation
 -XX:NumberOfGCLogFiles=10
 -XX:GCLogFileSize=100M
 -Xloggc:${LOG_DIR}/gc.log
 -Dfile.encoding=UTF-8
 -Dlogback.configurationFile=${CONFIG_DIR}/logback.xml"

CHILDPID=""
function shutdownChild()
{
    echo "signal trap caught - taking stack trace and sleeping 5s before relaying signal"

    if [ -z "$CHILDPID" ]
    then
        echo "no hub child PID to shutdown"
        return
    fi

    kill -QUIT ${CHILDPID}

    echo "issuing shutdown curl command..."
    ${CURL}localhost:${APP_PORT}/shutdown

    kill -TERM ${CHILDPID}
    echo "signal sent, waiting ..."
    wait ${CHILDPID}
    echo "hub is down"
}
trap "shutdownChild" SIGTERM SIGINT
CONFIG_FILE="/opt/hub/config.yaml"

# Check if the config file exists
if [ ! -f "$CONFIG_FILE" ]; then
    echo "Configuration file does not exist. Creating it..."

    # Create the configuration file with the required content
    echo "rules:" > "$CONFIG_FILE"
    echo "- pattern: \".*\"" >> "$CONFIG_FILE"

    echo "Configuration file created at $CONFIG_FILE"
else
    echo "Configuration file already exists at $CONFIG_FILE"
fi

echo "running hub in the background..."
#exec java -cp ${CLASSPATH} ${JAVA_OPTS} com.flightstats.hub.app.HubMain ${CONFIG_DIR}/hub.properties &
exec java -javaagent:"${APP_HOME}/lib/jmx_prometheus_javaagent-1.0.1.jar"=12347:/opt/hub/config.yaml -cp ${CLASSPATH} ${JAVA_OPTS} com.flightstats.hub.app.HubMain ${CONFIG_DIR}/hub.properties &
CHILDPID=$!
echo "... hub pid is $CHILDPID"

wait ${CHILDPID}
exit $?